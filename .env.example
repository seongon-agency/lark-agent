# =============================================================================
# Lark-Agent Environment Configuration
# =============================================================================
# This file contains all environment variables needed for both services:
# 1. Go Feishu Bot (main service)
# 2. Python Agno AI Service (AI backend)
#
# Copy this file to .env and fill in your actual values
# =============================================================================

# =============================================================================
# FEISHU/LARK BOT CONFIGURATION (Required)
# =============================================================================
# Get these from Feishu Open Platform: https://open.feishu.cn/app
APP_ID=cli_a1234567890abcde
APP_SECRET=your_app_secret_here
APP_ENCRYPT_KEY=your_encrypt_key_here
APP_VERIFICATION_TOKEN=your_verification_token_here

# Bot display name in Feishu (must match your bot settings)
BOT_NAME=chatGpt

# =============================================================================
# OPENAI CONFIGURATION (Required for AI features)
# =============================================================================
# OpenAI API Key(s) - supports load balancing with multiple keys
# Format: sk-xxx,sk-yyy,sk-zzz (comma-separated)
OPENAI_KEY=sk-your_openai_api_key_here

# OpenAI Model Selection
# Options: gpt-4, gpt-4-turbo, gpt-3.5-turbo, etc.
OPENAI_MODEL=gpt-3.5-turbo

# Maximum tokens for OpenAI responses
OPENAI_MAX_TOKENS=2000

# OpenAI HTTP client timeout (in seconds)
OPENAI_HTTP_CLIENT_TIMEOUT=550

# =============================================================================
# AGNO AI SERVICE CONFIGURATION (Required for Agno backend)
# =============================================================================
# URL of the Python Agno service
# For local development: http://localhost:8000
# For Railway: Will be auto-configured via service reference
AGNO_SERVICE_URL=http://localhost:8000

# Enable/disable Agno service integration
USE_AGNO=true

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# HTTP Server Port (Railway will override with PORT variable)
HTTP_PORT=9000
PORT=9000

# HTTPS Configuration (optional)
HTTPS_PORT=9001
USE_HTTPS=false
CERT_FILE=cert.pem
KEY_FILE=key.pem

# =============================================================================
# API & PROXY SETTINGS
# =============================================================================
# OpenAI API URL (change if using reverse proxy)
API_URL=https://api.openai.com

# HTTP Proxy (optional) - leave empty if not needed
# Example: http://127.0.0.1:7890
HTTP_PROXY=

# =============================================================================
# AZURE OPENAI (Optional - for Azure OpenAI Service)
# =============================================================================
# Set to true to use Azure OpenAI instead of OpenAI
AZURE_ON=false

# Azure OpenAI Configuration (only if AZURE_ON=true)
AZURE_API_VERSION=2023-03-15-preview
AZURE_RESOURCE_NAME=your-resource-name
AZURE_DEPLOYMENT_NAME=your-deployment-name
AZURE_OPENAI_TOKEN=your-azure-token

# =============================================================================
# ADVANCED SETTINGS
# =============================================================================
# Enable streaming responses (experimental)
STREAM_MODE=false

# Feishu API Base URL (optional - use default)
BASE_URL=

# =============================================================================
# PYTHON AGNO SERVICE SPECIFIC (ai-service/)
# =============================================================================
# These are used by the Python Agno service directly

# Server configuration for Python service
HOST=0.0.0.0

# Storage directory for SQLite database
STORAGE_DIR=./data

# =============================================================================
# RAILWAY DEPLOYMENT NOTES
# =============================================================================
# When deploying to Railway:
# 1. Create two services from this repo:
#    - Service 1: feishu-bot (root: /, uses Dockerfile)
#    - Service 2: agno-service (root: /ai-service, uses ai-service/Dockerfile)
#
# 2. Set these environment variables in Railway dashboard:
#    For feishu-bot service:
#    - All Feishu bot variables (APP_ID, APP_SECRET, etc.)
#    - OPENAI_KEY
#    - AGNO_SERVICE_URL (use Railway service reference)
#
#    For agno-service:
#    - OPENAI_KEY
#    - OPENAI_MODEL
#    - PORT (automatically set by Railway)
#
# 3. Railway will automatically set PORT variable - no need to configure
#
# 4. Connect services using Railway's internal DNS:
#    AGNO_SERVICE_URL=http://agno-service.railway.internal:8000
# =============================================================================
